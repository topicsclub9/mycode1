import React, { useState } from 'react';
import { Button } from '@/components/ui/button';
import { ArrowLeft, Download, Share2 } from 'lucide-react';
import InputForm from './components/InputForm';
import MatrixChart from './components/MatrixChart';
import HealthChart from './components/HealthChart';
import Interpretation from './components/Interpretation';
import { calculateMatrixChart, calculateHealthChart } from './utils/matrixCalculations';
import './App.css';

function App() {
  const [currentStep, setCurrentStep] = useState('input'); // 'input', 'results'
  const [isLoading, setIsLoading] = useState(false);
  const [chartData, setChartData] = useState(null);
  const [personalInfo, setPersonalInfo] = useState(null);

  const handleFormSubmit = async (formData) => {
    setIsLoading(true);
    
    // Simulate calculation time for better UX
    await new Promise(resolve => setTimeout(resolve, 1500));
    
    try {
      // Calculate matrix chart
      const matrixData = calculateMatrixChart(formData.day, formData.month, formData.year);
      
      // Calculate health chart
      const healthData = calculateHealthChart(matrixData);
      
      setChartData({
        matrix: matrixData,
        health: healthData
      });
      
      setPersonalInfo(formData);
      setCurrentStep('results');
    } catch (error) {
      console.error('Error calculating matrix:', error);
      alert('An error occurred while calculating your matrix. Please try again.');
    } finally {
      setIsLoading(false);
    }
  };

  const handleBackToInput = () => {
    setCurrentStep('input');
    setChartData(null);
    setPersonalInfo(null);
  };

  const handleShare = async () => {
    if (navigator.share) {
      try {
        await navigator.share({
          title: 'My Matrix Destiny Chart',
          text: `Check out my Matrix Destiny Chart! My core essence is energy ${chartData.matrix.centerPoint}.`,
          url: window.location.href
        });
      } catch (error) {
        console.log('Error sharing:', error);
      }
    } else {
      // Fallback for browsers that don't support Web Share API
      const text = `Check out my Matrix Destiny Chart! My core essence is energy ${chartData.matrix.centerPoint}. ${window.location.href}`;
      navigator.clipboard.writeText(text).then(() => {
        alert('Chart details copied to clipboard!');
      });
    }
  };

  const handleDownload = () => {
    // Create a simple text summary for download
    const summary = `
Matrix Destiny Chart for ${personalInfo.name}
Birth Date: ${personalInfo.month}/${personalInfo.day}/${personalInfo.year}

CORE ENERGIES:
- Central Essence: ${chartData.matrix.centerPoint}
- Portrait Energy: ${chartData.matrix.primarySquare.top}
- Talents: ${chartData.matrix.primarySquare.right}
- Material Purpose: ${chartData.matrix.primarySquare.bottom}
- Spiritual Purpose: ${chartData.matrix.primarySquare.left}

LIFE LINES:
- Love Line: ${chartData.matrix.primaryCorners.bottomLeft}
- Money Line: ${chartData.matrix.primaryCorners.bottomRight}
- Karmic Challenges: ${chartData.matrix.primaryCorners.topLeft}
- Manifestation: ${chartData.matrix.primaryCorners.topRight}

HEALTH TOTALS:
- Physics: ${chartData.health.total.physics}
- Energy: ${chartData.health.total.energy}
- Emotions: ${chartData.health.total.emotions}

Generated by Matrix Destiny Chart Tool
    `;

    const blob = new Blob([summary], { type: 'text/plain' });
    const url = URL.createObjectURL(blob);
    const a = document.createElement('a');
    a.href = url;
    a.download = `${personalInfo.name.replace(/\s+/g, '_')}_Matrix_Chart.txt`;
    document.body.appendChild(a);
    a.click();
    document.body.removeChild(a);
    URL.revokeObjectURL(url);
  };

  if (currentStep === 'input') {
    return <InputForm onSubmit={handleFormSubmit} isLoading={isLoading} />;
  }

  return (
    <div className="min-h-screen bg-gradient-to-br from-gray-50 to-blue-50">
      {/* Header */}
      <div className="bg-white shadow-sm border-b">
        <div className="max-w-6xl mx-auto px-4 py-4">
          <div className="flex items-center justify-between">
            <div className="flex items-center gap-4">
              <Button
                variant="outline"
                size="sm"
                onClick={handleBackToInput}
                className="flex items-center gap-2"
              >
                <ArrowLeft className="w-4 h-4" />
                New Chart
              </Button>
              <div>
                <h1 className="text-xl font-bold text-gray-800">
                  {personalInfo.name}'s Matrix Destiny Chart
                </h1>
                <p className="text-sm text-gray-600">
                  Born: {personalInfo.month}/{personalInfo.day}/{personalInfo.year}
                </p>
              </div>
            </div>
            
            <div className="flex items-center gap-2">
              <Button
                variant="outline"
                size="sm"
                onClick={handleShare}
                className="flex items-center gap-2"
              >
                <Share2 className="w-4 h-4" />
                Share
              </Button>
              <Button
                variant="outline"
                size="sm"
                onClick={handleDownload}
                className="flex items-center gap-2"
              >
                <Download className="w-4 h-4" />
                Download
              </Button>
            </div>
          </div>
        </div>
      </div>

      {/* Main Content */}
      <div className="max-w-6xl mx-auto px-4 py-8 space-y-12">
        {/* Matrix Chart */}
        <section>
          <MatrixChart matrixData={chartData.matrix} />
        </section>

        {/* Health Chart */}
        <section>
          <HealthChart healthData={chartData.health} />
        </section>

        {/* Detailed Interpretation */}
        <section>
          <Interpretation 
            matrixData={chartData.matrix} 
            personalInfo={personalInfo}
          />
        </section>

        {/* Footer */}
        <footer className="text-center py-8 border-t">
          <div className="space-y-4">
            <p className="text-gray-600">
              Your Matrix Destiny Chart reveals the energetic blueprint of your soul's journey.
            </p>
            <p className="text-sm text-gray-500">
              Use this knowledge as guidance for personal growth and self-understanding.
            </p>
            <Button
              onClick={handleBackToInput}
              className="bg-gradient-to-r from-purple-500 to-pink-500 hover:from-purple-600 hover:to-pink-600"
            >
              Create Another Chart
            </Button>
          </div>
        </footer>
      </div>
    </div>
  );
}

export default App;

